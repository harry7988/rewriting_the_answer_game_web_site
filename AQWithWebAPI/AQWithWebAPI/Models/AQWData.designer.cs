//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("AQWData", "FK_UserHasToosNumber_AnswerTools", "AnswerTools", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.AnswerTool), "UserHasToolsNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.UserHasToolsNumber), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_User_IsOnline", "IsOnline", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.IsOnline), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.User), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_User_Level", "Level", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AQWData.Level), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.User), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_LogInfo_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.User), "LogInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.LogInfo), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_Score_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.Question), "Score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.Score), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_User_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.User), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_S_GroupNumber_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AQWData.User), "S_GroupNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.S_GroupNumber), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_Score_S_GroupNumber", "S_GroupNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.S_GroupNumber), "Score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.Score), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_Score_Score_Type", "Score_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.Score_Type), "Score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.Score), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_Score_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.User), "Score", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.Score), true)]
[assembly: EdmRelationshipAttribute("AQWData", "FK_UserHasToosNumber_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AQWData.User), "UserHasToolsNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AQWData.UserHasToolsNumber), true)]

#endregion

namespace AQWData
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class AQWDataEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“AQWDataEntities”部分中的连接字符串初始化新 AQWDataEntities 对象。
        /// </summary>
        public AQWDataEntities() : base("name=AQWDataEntities", "AQWDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AQWDataEntities 对象。
        /// </summary>
        public AQWDataEntities(string connectionString) : base(connectionString, "AQWDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AQWDataEntities 对象。
        /// </summary>
        public AQWDataEntities(EntityConnection connection) : base(connection, "AQWDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<AnswerTool> AnswerTools
        {
            get
            {
                if ((_AnswerTools == null))
                {
                    _AnswerTools = base.CreateObjectSet<AnswerTool>("AnswerTools");
                }
                return _AnswerTools;
            }
        }
        private ObjectSet<AnswerTool> _AnswerTools;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<IsOnline> IsOnlines
        {
            get
            {
                if ((_IsOnlines == null))
                {
                    _IsOnlines = base.CreateObjectSet<IsOnline>("IsOnlines");
                }
                return _IsOnlines;
            }
        }
        private ObjectSet<IsOnline> _IsOnlines;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Level> Levels
        {
            get
            {
                if ((_Levels == null))
                {
                    _Levels = base.CreateObjectSet<Level>("Levels");
                }
                return _Levels;
            }
        }
        private ObjectSet<Level> _Levels;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<LogInfo> LogInfoes
        {
            get
            {
                if ((_LogInfoes == null))
                {
                    _LogInfoes = base.CreateObjectSet<LogInfo>("LogInfoes");
                }
                return _LogInfoes;
            }
        }
        private ObjectSet<LogInfo> _LogInfoes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<S_GroupNumber> S_GroupNumber
        {
            get
            {
                if ((_S_GroupNumber == null))
                {
                    _S_GroupNumber = base.CreateObjectSet<S_GroupNumber>("S_GroupNumber");
                }
                return _S_GroupNumber;
            }
        }
        private ObjectSet<S_GroupNumber> _S_GroupNumber;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Score> Scores
        {
            get
            {
                if ((_Scores == null))
                {
                    _Scores = base.CreateObjectSet<Score>("Scores");
                }
                return _Scores;
            }
        }
        private ObjectSet<Score> _Scores;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Score_Type> Score_Type
        {
            get
            {
                if ((_Score_Type == null))
                {
                    _Score_Type = base.CreateObjectSet<Score_Type>("Score_Type");
                }
                return _Score_Type;
            }
        }
        private ObjectSet<Score_Type> _Score_Type;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserHasToolsNumber> UserHasToolsNumbers
        {
            get
            {
                if ((_UserHasToolsNumbers == null))
                {
                    _UserHasToolsNumbers = base.CreateObjectSet<UserHasToolsNumber>("UserHasToolsNumbers");
                }
                return _UserHasToolsNumbers;
            }
        }
        private ObjectSet<UserHasToolsNumber> _UserHasToolsNumbers;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 AnswerTools EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAnswerTools(AnswerTool answerTool)
        {
            base.AddObject("AnswerTools", answerTool);
        }
    
        /// <summary>
        /// 用于向 IsOnlines EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToIsOnlines(IsOnline isOnline)
        {
            base.AddObject("IsOnlines", isOnline);
        }
    
        /// <summary>
        /// 用于向 Levels EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLevels(Level level)
        {
            base.AddObject("Levels", level);
        }
    
        /// <summary>
        /// 用于向 LogInfoes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLogInfoes(LogInfo logInfo)
        {
            base.AddObject("LogInfoes", logInfo);
        }
    
        /// <summary>
        /// 用于向 Questions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// 用于向 Roles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// 用于向 S_GroupNumber EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToS_GroupNumber(S_GroupNumber s_GroupNumber)
        {
            base.AddObject("S_GroupNumber", s_GroupNumber);
        }
    
        /// <summary>
        /// 用于向 Scores EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToScores(Score score)
        {
            base.AddObject("Scores", score);
        }
    
        /// <summary>
        /// 用于向 Score_Type EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToScore_Type(Score_Type score_Type)
        {
            base.AddObject("Score_Type", score_Type);
        }
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// 用于向 UserHasToolsNumbers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserHasToolsNumbers(UserHasToolsNumber userHasToolsNumber)
        {
            base.AddObject("UserHasToolsNumbers", userHasToolsNumber);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="AnswerTool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnswerTool : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 AnswerTool 对象。
        /// </summary>
        /// <param name="tID">TID 属性的初始值。</param>
        public static AnswerTool CreateAnswerTool(global::System.Int32 tID)
        {
            AnswerTool answerTool = new AnswerTool();
            answerTool.TID = tID;
            return answerTool;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TID
        {
            get
            {
                return _TID;
            }
            set
            {
                if (_TID != value)
                {
                    OnTIDChanging(value);
                    ReportPropertyChanging("TID");
                    _TID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TID");
                    OnTIDChanged();
                }
            }
        }
        private global::System.Int32 _TID;
        partial void OnTIDChanging(global::System.Int32 value);
        partial void OnTIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String T_Name
        {
            get
            {
                return _T_Name;
            }
            set
            {
                OnT_NameChanging(value);
                ReportPropertyChanging("T_Name");
                _T_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("T_Name");
                OnT_NameChanged();
            }
        }
        private global::System.String _T_Name;
        partial void OnT_NameChanging(global::System.String value);
        partial void OnT_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String T_Desc
        {
            get
            {
                return _T_Desc;
            }
            set
            {
                OnT_DescChanging(value);
                ReportPropertyChanging("T_Desc");
                _T_Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("T_Desc");
                OnT_DescChanged();
            }
        }
        private global::System.String _T_Desc;
        partial void OnT_DescChanging(global::System.String value);
        partial void OnT_DescChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> T_Price
        {
            get
            {
                return _T_Price;
            }
            set
            {
                OnT_PriceChanging(value);
                ReportPropertyChanging("T_Price");
                _T_Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("T_Price");
                OnT_PriceChanged();
            }
        }
        private Nullable<global::System.Int32> _T_Price;
        partial void OnT_PriceChanging(Nullable<global::System.Int32> value);
        partial void OnT_PriceChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_UserHasToosNumber_AnswerTools", "UserHasToolsNumber")]
        public EntityCollection<UserHasToolsNumber> UserHasToolsNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserHasToolsNumber>("AQWData.FK_UserHasToosNumber_AnswerTools", "UserHasToolsNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserHasToolsNumber>("AQWData.FK_UserHasToosNumber_AnswerTools", "UserHasToolsNumber", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="IsOnline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IsOnline : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 IsOnline 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static IsOnline CreateIsOnline(global::System.String id)
        {
            IsOnline isOnline = new IsOnline();
            isOnline.ID = id;
            return isOnline;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_User_IsOnline", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("AQWData.FK_User_IsOnline", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("AQWData.FK_User_IsOnline", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="Level")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Level : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Level 对象。
        /// </summary>
        /// <param name="levelID">LevelID 属性的初始值。</param>
        public static Level CreateLevel(global::System.Int32 levelID)
        {
            Level level = new Level();
            level.LevelID = levelID;
            return level;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                if (_LevelID != value)
                {
                    OnLevelIDChanging(value);
                    ReportPropertyChanging("LevelID");
                    _LevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LevelID");
                    OnLevelIDChanged();
                }
            }
        }
        private global::System.Int32 _LevelID;
        partial void OnLevelIDChanging(global::System.Int32 value);
        partial void OnLevelIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String L_Name
        {
            get
            {
                return _L_Name;
            }
            set
            {
                OnL_NameChanging(value);
                ReportPropertyChanging("L_Name");
                _L_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("L_Name");
                OnL_NameChanged();
            }
        }
        private global::System.String _L_Name;
        partial void OnL_NameChanging(global::System.String value);
        partial void OnL_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> L_Admit_Min_Score
        {
            get
            {
                return _L_Admit_Min_Score;
            }
            set
            {
                OnL_Admit_Min_ScoreChanging(value);
                ReportPropertyChanging("L_Admit_Min_Score");
                _L_Admit_Min_Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("L_Admit_Min_Score");
                OnL_Admit_Min_ScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _L_Admit_Min_Score;
        partial void OnL_Admit_Min_ScoreChanging(Nullable<global::System.Int32> value);
        partial void OnL_Admit_Min_ScoreChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_User_Level", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("AQWData.FK_User_Level", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("AQWData.FK_User_Level", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="LogInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 LogInfo 对象。
        /// </summary>
        /// <param name="infoID">InfoID 属性的初始值。</param>
        public static LogInfo CreateLogInfo(global::System.Int32 infoID)
        {
            LogInfo logInfo = new LogInfo();
            logInfo.InfoID = infoID;
            return logInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfoID
        {
            get
            {
                return _InfoID;
            }
            set
            {
                if (_InfoID != value)
                {
                    OnInfoIDChanging(value);
                    ReportPropertyChanging("InfoID");
                    _InfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfoID");
                    OnInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _InfoID;
        partial void OnInfoIDChanging(global::System.Int32 value);
        partial void OnInfoIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String I_Msg
        {
            get
            {
                return _I_Msg;
            }
            set
            {
                OnI_MsgChanging(value);
                ReportPropertyChanging("I_Msg");
                _I_Msg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("I_Msg");
                OnI_MsgChanged();
            }
        }
        private global::System.String _I_Msg;
        partial void OnI_MsgChanging(global::System.String value);
        partial void OnI_MsgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String I_Date
        {
            get
            {
                return _I_Date;
            }
            set
            {
                OnI_DateChanging(value);
                ReportPropertyChanging("I_Date");
                _I_Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("I_Date");
                OnI_DateChanged();
            }
        }
        private global::System.String _I_Date;
        partial void OnI_DateChanging(global::System.String value);
        partial void OnI_DateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> I_UserID
        {
            get
            {
                return _I_UserID;
            }
            set
            {
                OnI_UserIDChanging(value);
                ReportPropertyChanging("I_UserID");
                _I_UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("I_UserID");
                OnI_UserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _I_UserID;
        partial void OnI_UserIDChanging(Nullable<global::System.Int32> value);
        partial void OnI_UserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String I_Type
        {
            get
            {
                return _I_Type;
            }
            set
            {
                OnI_TypeChanging(value);
                ReportPropertyChanging("I_Type");
                _I_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("I_Type");
                OnI_TypeChanged();
            }
        }
        private global::System.String _I_Type;
        partial void OnI_TypeChanging(global::System.String value);
        partial void OnI_TypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_LogInfo_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_LogInfo_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_LogInfo_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_LogInfo_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AQWData.FK_LogInfo_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Question 对象。
        /// </summary>
        /// <param name="questionID">QuestionID 属性的初始值。</param>
        public static Question CreateQuestion(global::System.Int32 questionID)
        {
            Question question = new Question();
            question.QuestionID = questionID;
            return question;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Content
        {
            get
            {
                return _Q_Content;
            }
            set
            {
                OnQ_ContentChanging(value);
                ReportPropertyChanging("Q_Content");
                _Q_Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Content");
                OnQ_ContentChanged();
            }
        }
        private global::System.String _Q_Content;
        partial void OnQ_ContentChanging(global::System.String value);
        partial void OnQ_ContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Select_A
        {
            get
            {
                return _Q_Select_A;
            }
            set
            {
                OnQ_Select_AChanging(value);
                ReportPropertyChanging("Q_Select_A");
                _Q_Select_A = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Select_A");
                OnQ_Select_AChanged();
            }
        }
        private global::System.String _Q_Select_A;
        partial void OnQ_Select_AChanging(global::System.String value);
        partial void OnQ_Select_AChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Select_B
        {
            get
            {
                return _Q_Select_B;
            }
            set
            {
                OnQ_Select_BChanging(value);
                ReportPropertyChanging("Q_Select_B");
                _Q_Select_B = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Select_B");
                OnQ_Select_BChanged();
            }
        }
        private global::System.String _Q_Select_B;
        partial void OnQ_Select_BChanging(global::System.String value);
        partial void OnQ_Select_BChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Select_C
        {
            get
            {
                return _Q_Select_C;
            }
            set
            {
                OnQ_Select_CChanging(value);
                ReportPropertyChanging("Q_Select_C");
                _Q_Select_C = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Select_C");
                OnQ_Select_CChanged();
            }
        }
        private global::System.String _Q_Select_C;
        partial void OnQ_Select_CChanging(global::System.String value);
        partial void OnQ_Select_CChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Select_D
        {
            get
            {
                return _Q_Select_D;
            }
            set
            {
                OnQ_Select_DChanging(value);
                ReportPropertyChanging("Q_Select_D");
                _Q_Select_D = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Select_D");
                OnQ_Select_DChanged();
            }
        }
        private global::System.String _Q_Select_D;
        partial void OnQ_Select_DChanging(global::System.String value);
        partial void OnQ_Select_DChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Answer
        {
            get
            {
                return _Q_Answer;
            }
            set
            {
                OnQ_AnswerChanging(value);
                ReportPropertyChanging("Q_Answer");
                _Q_Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Answer");
                OnQ_AnswerChanged();
            }
        }
        private global::System.String _Q_Answer;
        partial void OnQ_AnswerChanging(global::System.String value);
        partial void OnQ_AnswerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Q_Add_Date
        {
            get
            {
                return _Q_Add_Date;
            }
            set
            {
                OnQ_Add_DateChanging(value);
                ReportPropertyChanging("Q_Add_Date");
                _Q_Add_Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Q_Add_Date");
                OnQ_Add_DateChanged();
            }
        }
        private global::System.String _Q_Add_Date;
        partial void OnQ_Add_DateChanging(global::System.String value);
        partial void OnQ_Add_DateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_Question", "Score")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("AQWData.FK_Score_Question", "Score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("AQWData.FK_Score_Question", "Score", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            return role;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDesc
        {
            get
            {
                return _RoleDesc;
            }
            set
            {
                OnRoleDescChanging(value);
                ReportPropertyChanging("RoleDesc");
                _RoleDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleDesc");
                OnRoleDescChanged();
            }
        }
        private global::System.String _RoleDesc;
        partial void OnRoleDescChanging(global::System.String value);
        partial void OnRoleDescChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_User_Role", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("AQWData.FK_User_Role", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("AQWData.FK_User_Role", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="S_GroupNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class S_GroupNumber : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 S_GroupNumber 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static S_GroupNumber CreateS_GroupNumber(global::System.Int32 id, global::System.Int32 userID)
        {
            S_GroupNumber s_GroupNumber = new S_GroupNumber();
            s_GroupNumber.ID = id;
            s_GroupNumber.UserID = userID;
            return s_GroupNumber;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_S_GroupNumber_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_S_GroupNumber_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_S_GroupNumber_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_S_GroupNumber_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AQWData.FK_S_GroupNumber_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_S_GroupNumber", "Score")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("AQWData.FK_Score_S_GroupNumber", "Score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("AQWData.FK_Score_S_GroupNumber", "Score", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="Score")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Score : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Score 对象。
        /// </summary>
        /// <param name="scoreID">ScoreID 属性的初始值。</param>
        public static Score CreateScore(global::System.Int32 scoreID)
        {
            Score score = new Score();
            score.ScoreID = scoreID;
            return score;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoreID
        {
            get
            {
                return _ScoreID;
            }
            set
            {
                if (_ScoreID != value)
                {
                    OnScoreIDChanging(value);
                    ReportPropertyChanging("ScoreID");
                    _ScoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScoreID");
                    OnScoreIDChanged();
                }
            }
        }
        private global::System.Int32 _ScoreID;
        partial void OnScoreIDChanging(global::System.Int32 value);
        partial void OnScoreIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> S_Correct
        {
            get
            {
                return _S_Correct;
            }
            set
            {
                OnS_CorrectChanging(value);
                ReportPropertyChanging("S_Correct");
                _S_Correct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("S_Correct");
                OnS_CorrectChanged();
            }
        }
        private Nullable<global::System.Int32> _S_Correct;
        partial void OnS_CorrectChanging(Nullable<global::System.Int32> value);
        partial void OnS_CorrectChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String S_Achieve_Date
        {
            get
            {
                return _S_Achieve_Date;
            }
            set
            {
                OnS_Achieve_DateChanging(value);
                ReportPropertyChanging("S_Achieve_Date");
                _S_Achieve_Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("S_Achieve_Date");
                OnS_Achieve_DateChanged();
            }
        }
        private global::System.String _S_Achieve_Date;
        partial void OnS_Achieve_DateChanging(global::System.String value);
        partial void OnS_Achieve_DateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> S_GroupID
        {
            get
            {
                return _S_GroupID;
            }
            set
            {
                OnS_GroupIDChanging(value);
                ReportPropertyChanging("S_GroupID");
                _S_GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("S_GroupID");
                OnS_GroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _S_GroupID;
        partial void OnS_GroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnS_GroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> S_UserID
        {
            get
            {
                return _S_UserID;
            }
            set
            {
                OnS_UserIDChanging(value);
                ReportPropertyChanging("S_UserID");
                _S_UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("S_UserID");
                OnS_UserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _S_UserID;
        partial void OnS_UserIDChanging(Nullable<global::System.Int32> value);
        partial void OnS_UserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> S_QID
        {
            get
            {
                return _S_QID;
            }
            set
            {
                OnS_QIDChanging(value);
                ReportPropertyChanging("S_QID");
                _S_QID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("S_QID");
                OnS_QIDChanged();
            }
        }
        private Nullable<global::System.Int32> _S_QID;
        partial void OnS_QIDChanging(Nullable<global::System.Int32> value);
        partial void OnS_QIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String S_Type
        {
            get
            {
                return _S_Type;
            }
            set
            {
                OnS_TypeChanging(value);
                ReportPropertyChanging("S_Type");
                _S_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("S_Type");
                OnS_TypeChanged();
            }
        }
        private global::System.String _S_Type;
        partial void OnS_TypeChanging(global::System.String value);
        partial void OnS_TypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("AQWData.FK_Score_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("AQWData.FK_Score_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("AQWData.FK_Score_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("AQWData.FK_Score_Question", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_S_GroupNumber", "S_GroupNumber")]
        public S_GroupNumber S_GroupNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<S_GroupNumber>("AQWData.FK_Score_S_GroupNumber", "S_GroupNumber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<S_GroupNumber>("AQWData.FK_Score_S_GroupNumber", "S_GroupNumber").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<S_GroupNumber> S_GroupNumberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<S_GroupNumber>("AQWData.FK_Score_S_GroupNumber", "S_GroupNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<S_GroupNumber>("AQWData.FK_Score_S_GroupNumber", "S_GroupNumber", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_Score_Type", "Score_Type")]
        public Score_Type Score_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Score_Type>("AQWData.FK_Score_Score_Type", "Score_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Score_Type>("AQWData.FK_Score_Score_Type", "Score_Type").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Score_Type> Score_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Score_Type>("AQWData.FK_Score_Score_Type", "Score_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Score_Type>("AQWData.FK_Score_Score_Type", "Score_Type", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_Score_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_Score_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_Score_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AQWData.FK_Score_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="Score_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Score_Type : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Score_Type 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static Score_Type CreateScore_Type(global::System.String id)
        {
            Score_Type score_Type = new Score_Type();
            score_Type.ID = id;
            return score_Type;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_Score_Type", "Score")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("AQWData.FK_Score_Score_Type", "Score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("AQWData.FK_Score_Score_Type", "Score", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagram 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="passwords">Passwords 属性的初始值。</param>
        /// <param name="levelID">LevelID 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String passwords, global::System.Int32 levelID)
        {
            User user = new User();
            user.ID = id;
            user.UserName = userName;
            user.Passwords = passwords;
            user.LevelID = levelID;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passwords
        {
            get
            {
                return _Passwords;
            }
            set
            {
                OnPasswordsChanging(value);
                ReportPropertyChanging("Passwords");
                _Passwords = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Passwords");
                OnPasswordsChanged();
            }
        }
        private global::System.String _Passwords;
        partial void OnPasswordsChanging(global::System.String value);
        partial void OnPasswordsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                OnLevelIDChanging(value);
                ReportPropertyChanging("LevelID");
                _LevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelID");
                OnLevelIDChanged();
            }
        }
        private global::System.Int32 _LevelID;
        partial void OnLevelIDChanging(global::System.Int32 value);
        partial void OnLevelIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Max_score
        {
            get
            {
                return _Max_score;
            }
            set
            {
                OnMax_scoreChanging(value);
                ReportPropertyChanging("Max_score");
                _Max_score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Max_score");
                OnMax_scoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Max_score;
        partial void OnMax_scoreChanging(Nullable<global::System.Int32> value);
        partial void OnMax_scoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RloeID
        {
            get
            {
                return _RloeID;
            }
            set
            {
                OnRloeIDChanging(value);
                ReportPropertyChanging("RloeID");
                _RloeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RloeID");
                OnRloeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RloeID;
        partial void OnRloeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRloeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsOnline
        {
            get
            {
                return _IsOnline;
            }
            set
            {
                OnIsOnlineChanging(value);
                ReportPropertyChanging("IsOnline");
                _IsOnline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsOnline");
                OnIsOnlineChanged();
            }
        }
        private global::System.String _IsOnline;
        partial void OnIsOnlineChanging(global::System.String value);
        partial void OnIsOnlineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Add_Date
        {
            get
            {
                return _Add_Date;
            }
            set
            {
                OnAdd_DateChanging(value);
                ReportPropertyChanging("Add_Date");
                _Add_Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Add_Date");
                OnAdd_DateChanged();
            }
        }
        private global::System.String _Add_Date;
        partial void OnAdd_DateChanging(global::System.String value);
        partial void OnAdd_DateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_User_IsOnline", "IsOnline")]
        public IsOnline IsOnline1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IsOnline>("AQWData.FK_User_IsOnline", "IsOnline").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IsOnline>("AQWData.FK_User_IsOnline", "IsOnline").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IsOnline> IsOnline1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IsOnline>("AQWData.FK_User_IsOnline", "IsOnline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IsOnline>("AQWData.FK_User_IsOnline", "IsOnline", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_User_Level", "Level")]
        public Level Level
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("AQWData.FK_User_Level", "Level").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("AQWData.FK_User_Level", "Level").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Level> LevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("AQWData.FK_User_Level", "Level");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Level>("AQWData.FK_User_Level", "Level", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_LogInfo_User", "LogInfo")]
        public EntityCollection<LogInfo> LogInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogInfo>("AQWData.FK_LogInfo_User", "LogInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogInfo>("AQWData.FK_LogInfo_User", "LogInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_User_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AQWData.FK_User_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AQWData.FK_User_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AQWData.FK_User_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("AQWData.FK_User_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_S_GroupNumber_User", "S_GroupNumber")]
        public EntityCollection<S_GroupNumber> S_GroupNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<S_GroupNumber>("AQWData.FK_S_GroupNumber_User", "S_GroupNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<S_GroupNumber>("AQWData.FK_S_GroupNumber_User", "S_GroupNumber", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_Score_User", "Score")]
        public EntityCollection<Score> Scores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Score>("AQWData.FK_Score_User", "Score");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Score>("AQWData.FK_Score_User", "Score", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_UserHasToosNumber_User", "UserHasToolsNumber")]
        public EntityCollection<UserHasToolsNumber> UserHasToolsNumbers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserHasToolsNumber>("AQWData.FK_UserHasToosNumber_User", "UserHasToolsNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserHasToolsNumber>("AQWData.FK_UserHasToosNumber_User", "UserHasToolsNumber", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AQWData", Name="UserHasToolsNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserHasToolsNumber : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserHasToolsNumber 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static UserHasToolsNumber CreateUserHasToolsNumber(global::System.Int32 id)
        {
            UserHasToolsNumber userHasToolsNumber = new UserHasToolsNumber();
            userHasToolsNumber.ID = id;
            return userHasToolsNumber;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ToolID;
        partial void OnToolIDChanging(Nullable<global::System.Int32> value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToolsNumber
        {
            get
            {
                return _ToolsNumber;
            }
            set
            {
                OnToolsNumberChanging(value);
                ReportPropertyChanging("ToolsNumber");
                _ToolsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolsNumber");
                OnToolsNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _ToolsNumber;
        partial void OnToolsNumberChanging(Nullable<global::System.Int32> value);
        partial void OnToolsNumberChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_UserHasToosNumber_AnswerTools", "AnswerTools")]
        public AnswerTool AnswerTool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnswerTool>("AQWData.FK_UserHasToosNumber_AnswerTools", "AnswerTools").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnswerTool>("AQWData.FK_UserHasToosNumber_AnswerTools", "AnswerTools").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AnswerTool> AnswerToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AnswerTool>("AQWData.FK_UserHasToosNumber_AnswerTools", "AnswerTools");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AnswerTool>("AQWData.FK_UserHasToosNumber_AnswerTools", "AnswerTools", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AQWData", "FK_UserHasToosNumber_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_UserHasToosNumber_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_UserHasToosNumber_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AQWData.FK_UserHasToosNumber_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AQWData.FK_UserHasToosNumber_User", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
